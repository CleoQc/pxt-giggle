{
    "lights.smile": "variable permettant d'utiliser les blocs de la catégorie neopixel afin de contrôler les lumières formant le sourire.",
    "lights.smileCycleRainbow": "Affiche et défile les couleurs de l'arc-en-ciel.",
    "lights.smileCycleRainbowTime": "Affiche les couleurs de l'arc-en-ciel sur le sourire et défile ces couleurs pendant un certain temps en millisecondes.",
    "lights.smileCycleRainbowTime|param|cycle_length": "combien de temps (en ms) le cycle de défilement durera: eg: 3000",
    "lights.smileCycleRainbowTime|param|delay": "delai en millisecondes avant de cycler les couleurs; eg: 100, 200",
    "lights.smileCycleRainbow|param|nbcycles": "combien de cycles pour l'arc-en-ciel; eg: 3, 5, 10",
    "lights.smileRainbow": "Affiche les couleurs de l'arc-en-ciel sur le sourire.",
    "lights.smileShowGraph": "Utilise les lumières du sourire afin d'afficher une valeur de 0 à Max",
    "lights.smileShowGraph|param|graph_max": "la valeur maximale qui n'a pas besoin d'être un multiple de 7; eg: 7",
    "lights.smileShowGraph|param|graph_value": "la valeur à afficher; eg: 1",
    "lights.whichEye": "Permet d'utiliser les blocs de la catégorie Neopixel afin d'avoir un meilleur contrôle sur les yeux.",
    "remote.onRemoteControl": "Ce bloc permet au Gigglebot d'être contrôlé par un second micro:bit",
    "remote.onRemoteControl|param|radioBlock": "eg:1",
    "remote.remoteControl": "Ce bloc permet à un second Micro:bit de contrôler le Gigglebot.\nL'approche la plus simple est d'insérer ce bloc dans une boucle \"Toujours\".\nLe Gigglebot doit avoir les blocs de contrôle dans son micro:bit" ,
    "remote.remoteControlAction": "@param",
    "remote.remoteControl|param|radioBlock": "eg: 1"
  }